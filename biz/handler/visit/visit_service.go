// Code generated by hertz generator.

package visit

import (
	visit "Hospital/biz/model/visit"
	"Hospital/biz/pack"
	"Hospital/biz/service"
	"Hospital/pkg/errno"
	"context"

	"github.com/cloudwego/hertz/pkg/app"
)

// AddVisitMessage .
// @router /visit/add [POST]
func AddVisitMessage(ctx context.Context, c *app.RequestContext) {
	var err error
	var req visit.AddVisitMessageRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		pack.SendFailResponse(c, errno.NewErrNo(errno.ParamMissingErrorCode, "param missing:"+err.Error()))
		return
	}

	resp := new(visit.AddVisitMessageResponse)
	err = service.NewVisitService(ctx, c).NewVisitMessage(&req)
	if err != nil {
		pack.SendFailResponse(c, errno.ConvertErr(err))
		return
	}

	resp.Base = pack.BuildBaseResp(errno.Success)
	pack.SendResponse(c, resp)
}

// QueryVisitMessage .
// @router visit/info [GET]
func QueryVisitMessage(ctx context.Context, c *app.RequestContext) {
	var err error
	var req visit.QueryVisitMessageRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		pack.SendFailResponse(c, errno.NewErrNo(errno.ParamMissingErrorCode, "param missing:"+err.Error()))
		return
	}

	resp := new(visit.QueryVisitMessageResponse)
	visitResp, count, err := service.NewVisitService(ctx, c).QueryVisitMessage(&req)
	if err != nil {
		pack.SendFailResponse(c, errno.ConvertErr(err))
		return
	}
	resp.Data = pack.VisitMessageList(visitResp, count)
	resp.Base = pack.BuildBaseResp(errno.Success)
	pack.SendResponse(c, resp)
}
